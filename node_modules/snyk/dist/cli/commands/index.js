"use strict";
const abbrev = require('abbrev');
require('../../lib/spinner').isRequired = false;
// Wrapper for Commonjs compatibility
async function callModule(mod, args) {
    const resolvedModule = await mod;
    return (resolvedModule.default || resolvedModule)(...args);
}
const commands = {
    auth: async (...args) => callModule(Promise.resolve().then(() => require('./auth')), args),
    config: async (...args) => callModule(Promise.resolve().then(() => require('./config')), args),
    help: async (...args) => callModule(Promise.resolve().then(() => require('./help')), args),
    ignore: async (...args) => callModule(Promise.resolve().then(() => require('./ignore')), args),
    monitor: async (...args) => callModule(Promise.resolve().then(() => require('./monitor')), args),
    fix: async (...args) => callModule(Promise.resolve().then(() => require('./fix')), args),
    policy: async (...args) => callModule(Promise.resolve().then(() => require('./policy')), args),
    protect: async (...args) => callModule(Promise.resolve().then(() => require('./protect')), args),
    test: async (...args) => callModule(Promise.resolve().then(() => require('./test')), args),
    version: async (...args) => callModule(Promise.resolve().then(() => require('./version')), args),
    wizard: async (...args) => callModule(Promise.resolve().then(() => require('./protect/wizard')), args),
    woof: async (...args) => callModule(Promise.resolve().then(() => require('./woof')), args),
};
commands.aliases = abbrev(Object.keys(commands));
commands.aliases.t = 'test';
module.exports = commands;
//# sourceMappingURL=index.js.map